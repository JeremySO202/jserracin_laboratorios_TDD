module connect4_fsm(
	input clk, rst, M, to,
	output error, en_mant_ctr, rst_ctr_timer);
	

logic [1:0] state, next_state;

//actual state

always_ff @(posedge clk or posedge rst)
	if (rst) state = 2'b00;
	else
		state = next_state;
		
//next state

always_comb
	case(state)
	2'b00: next_state = M? 2'b01 : 2'b10;
	2'b01: next_state = 2'b00;
	2'b10: next_state = to? 2'b11: 2'b00;
	2'b11: next_state = 2'b11;
	default: next_state = 2'b00;
	endcase
	
	
assign en_mant_ctr = (state == 2'b01);
assign rst_ctr_timer = (state == 2'b01);
assign error = (state == 2'b11);

	
endmodule